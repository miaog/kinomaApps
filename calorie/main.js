//@programvar DIALOG = require('mobile/dialog');var MODEL = require('mobile/model');THEME = require('themes/sample/theme');KEYBOARD = require('mobile/keyboard');var caloriesDict = {'Spaghetti':600,'Banana':105,'PopTart':200,'BigMac':563,'Fries':365,'Taco':189,                    'Bread':79, 'Cake':350,'Thai':889,'IHOP':1990,'Water':120,'Boba':316,'Coffee':5,'Frap':420};var globalfooditemname;var bg = new Skin({ fill: '#424A4B' });var bn = new Skin({ fill: 'black' });var font1 = new Style({ color: '#00EAFE', font: 'bold 24px', horizontal: 'center', vertical: 'middle' });var font2 = new Style({ color: '#FFFFFF', font: 'bold 18px', horizontal: 'center', vertical: 'middle' });Handler.bind("/dialog", MODEL.DialogBehavior({  onDescribe(query) {    return {            Dialog: DIALOG.Box,            title: "Enter food information",            action: "/result",            items: [                {                    Item: DIALOG.Field,                    id: "food",                    label: "Food Item",                },                {                    Item: DIALOG.Caption,                    string: query.greeting                },                {                    id: "FOODNAME",                    string: query.food,                },            ],            ok: "Ok",    };  }}));var count;var fooditemname;Handler.bind("/result", {  onInvoke(handler, message) {    data = parseQuery(message.query);    count = data["food"];    fooditemname = data["FOODNAME"];        application.add(calculation())  }});var calculation = Column.template($ => ({    top: 0, bottom: 50, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar3)        }      }),    contents: [        new Label({ top: 0, height: 25, style: new Style( { font: "25px Arial Black", color: "#08FFFB" } ),                     string: "Total calories: "+ (Number(caloriesDict[fooditemname]) * Number(count)) }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Spaghetti'])) * 100)/100 + " Plates of Spaghetti" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Banana'])) * 100)/100 + " Bananas" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['PopTart'])) * 100)/100 + " Pop Tarts" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['BigMac'])) * 100)/100 + " Big Macs" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Fries'])) * 100)/100 + " Medium Fries" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Taco'])) * 100)/100 + " Tacos" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Bread'])) * 100)/100 + " Slices of bread" }),      ]}));var calculation2 = Column.template($ => ({    top: 0, bottom: 50, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar6)        }      }),    contents: [        new Label({ top: 0, height: 25, style: new Style( { font: "25px Arial Black", color: "#08FFFB" } ),                     string: "Total calories: "+ (Number(caloriesDict[fooditemname]) * Number(count)) }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Cake'])) * 100)/100 + " Chocolate Cake" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Thai'])) * 100)/100 + " Plates of Pad Thai" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['IHOP'])) * 100)/100 + " IHOP Chorizo Fiesta Omelettes" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Water'])) * 100)/100 + " Harmless Coconut Waters" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Boba'])) * 100)/100 + " Boba milk teas with grass jelly" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Coffee'])) * 100)/100 + " Cups of black coffee" }),        new Label({ top: 5, height: 18, style: new Style( { font: "20px Century Gothic", color: "white" } ),                     string: Math.round( ((Number(caloriesDict[fooditemname]) * Number(count))/                      Number(caloriesDict['Frap'])) * 100)/100 + " Grande Caramel Frappuccinos" }),    ]}));var FoodCount = Container.template($ => ({  left: 0, right: 0, top: 0, bottom: 0, skin: bg,  behavior: Behavior({        onCreate(label, x, y, id, ticks) {                var dialogData = {greeting: "Enter food amount.", FOODNAME: globalfooditemname };          label.invoke(new Message("/dialog?" + serializeQuery(dialogData)));        }      }),  contents: [  ]}));var doneScreen = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 50,   skin: new Skin({fill: "black"}),  behavior: Behavior({        onCreate: function(content){            application.add(navBardone)        }    }),   contents: [      Label($, {           top: 0, height: 25, bottom: 0, style: new Style( { font: "bold italic 35px Century Gothic", color: "#00E7FF" } ),          string: "Done!"       })   ]}));Handler.bind("/dialog1", MODEL.DialogBehavior({  onDescribe(query) {    return {            Dialog: DIALOG.Box,            title: "Enter food information",            action: "/result1",            items: [                {                    Item: DIALOG.Field,                    id: "calories",                    label: "Calories",                },                {                    Item: DIALOG.Caption,                    string: query.greeting                },                {                    id: "FOODNAME",                    string: query.food,                },            ],            ok: "Ok",    };  }}));Handler.bind("/result1", {  onInvoke(handler, message) {    data = parseQuery(message.query);    var cals = data["calories"];    var fooditemname = data["FOODNAME"];        caloriesDict[fooditemname] = Number(cals);    application.add(new doneScreen())  }});var Edit = Container.template($ => ({  left: 0, right: 0, top: 0, bottom: 0, skin: bg,  behavior: Behavior({        onCreate(label, x, y, id, ticks) {                var dialogData = {greeting: "Enter calorie amount", FOODNAME: globalfooditemname };          label.invoke(new Message("/dialog1?" + serializeQuery(dialogData)));        }      }),  contents: [  ]}));application.behavior = new MODEL.ApplicationBehavior( application );var Spaghetti = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "Spaghetti"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Plate of Spaghetti" }),    ]}));var Banana = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "Banana"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Banana" })    ]}));var PopTart = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "PopTart"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Pop Tart" })    ]}));var BigMac = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "BigMac"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Big Mac" })    ]}));var Fries = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "Fries"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Medium Fries" })    ]}));var Taco = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "Taco"        }    }),    contents: [        new Label({ style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Taco" })    ]}));var Bread = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar2),            globalfooditemname = "Bread"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Slice of bread" })    ]}));var Cake = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Cake"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Chocolate Cake" })    ]}));var Thai = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Thai"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Plate of" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Pad Thai" })    ]}));var IHOP = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "IHOP"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "IHOP Chorizo" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Fiesta Omelette" })    ]}));var Water = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Water"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Harmless" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Coconut Water" })    ]}));var Boba = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Boba"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Boba milk tea" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "with grass jelly" }),        new Label({ bottom: 0, height: 22, style: new Style( { font: "bold 20px Century Gothic", color: "#00E7FF" } ),                     string: "50% sugar" })    ]}));var Coffee = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Coffee"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Cup of" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "black coffee" })    ]}));var Frap = Column.template($ => ({    top: 0, bottom: 150, left: 0, right: 0,     skin: new Skin({fill: "black"}),    behavior: Behavior({        onCreate: function(content){            application.add(navBar5),            globalfooditemname = "Frap"        }    }),    contents: [        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Grande Caramel" }),        new Label({ top:0, bottom: 0, height: 0, style: new Style( { font: "bold 30px Century Gothic", color: "#00E7FF" } ),                     string: "Frappuccino" })    ]}));var Next = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 215,   skin: new Skin({fill: "black"}),  behavior: Behavior({        onCreate: function(content){            application.add(navBar4)        }    }),   contents: [      Picture($, { left:0, top:0, right:0,height: 20, url:"logo.png" }),   ]}));var MainScreen3 = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 215,   skin: new Skin({fill: "black"}),  behavior: Behavior({        onCreate: function(content){            application.add(navBar4)        }    }),   contents: [      Picture($, { left:0, top:0, right:0,height: 20, url:"logo.png" }),   ]}));var MainScreen = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 215,   skin: new Skin({fill: "black"}),   contents: [        Picture($, { left:0, top:0, right:0,height: 20, url:"logo.png" }),   ]}));var MainScreen2 = Column.template($ => ({   left: 0, right: 0, top: 0, bottom: 215,   skin: new Skin({fill: "black"}),  behavior: Behavior({        onCreate: function(content){            application.add(navBar)        }    }),   contents: [      Picture($, { left:0, top:0, right:0,height: 20, url:"logo.png" }),   ]}));var currentScreen = new MainScreen();application.add(currentScreen);var NavButton = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "transparent",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"white" } ),                  string: $.string })   ]}));var NavButton2 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar2); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButton3 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar3); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButton4 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "black",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar4); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left:5, style: new Style( { font: "20px Century Gothic", color:"white" } ),                  string: $.string })   ]}));var NavButton5 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar5); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButton6 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar6); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButtondone = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBardone); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left: 10, right: 0, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButtonC = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, right:5, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButtonC2 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "#00E7FF",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "#00E7FF"                });            this.downSkin = new Skin({              fill: "#00E7FF",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "#00E7FF"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar4); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, right:5, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButtonC3 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "white",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "white"                });            this.downSkin = new Skin({              fill: "white",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "white"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar5); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left:10, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var NavButtonC4 = Container.template($ => ({    active: true, top: 2, bottom: 2, right: 2, left: 2,    behavior: Behavior({        onCreate: function(content){            this.upSkin = new Skin({                  fill: "white",                   borders: {left: 1, right: 1, top: 1, bottom: 1},                   stroke: "white"                });            this.downSkin = new Skin({              fill: "white",               borders: {left: 1, right: 1, top: 1, bottom: 1},               stroke: "white"            });            content.skin = this.upSkin;        },        onTouchBegan: function(content){            content.skin = this.downSkin;        },        onTouchEnded: function(content){            content.skin = this.upSkin;            application.remove(currentScreen);  // Remove the old screen from the application            application.remove(navBar2); // Remove navigation bar            currentScreen = new $.nextScreen;  // Make the new screen            application.add(currentScreen);  // Add the new screen to the application        },    }),   contents: [      Label($, { top: 0, bottom: 0, left:10, style: new Style( { font: "20px Century Gothic", color:"black" } ),                  string: $.string })   ]}));var navBar = new Column({ top: 23, bottom: 0, height: 10, left: 0, right: 0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButton({ string: "Plate of Spaghetti", nextScreen: Spaghetti }),        new NavButton({ string: "Banana", nextScreen: Banana }),        new NavButton({ string: "Pop Tart", nextScreen: PopTart }),        new NavButton({ string: "Big Mac", nextScreen: BigMac }),        new NavButton({ string: "Medium Fries", nextScreen: Fries }),        new NavButton({ string: "Taco", nextScreen: Taco }),        new NavButton({ string: "Slice of bread", nextScreen: Bread }),        new NavButtonC({ string: "Next Page", nextScreen: Next }),    ]});var navBar2 = new Column({ bottom: 0, height: 150, left:0, right:0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButton2({ string: "Enter food count", nextScreen: FoodCount}),        new NavButtonC4({ string: "Edit Calories", nextScreen: Edit }),        new NavButton2({ string: "Go Back", nextScreen: MainScreen2 }),            ]});var navBar5 = new Column({ bottom: 0, height: 150, left:0, right:0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButton5({ string: "Enter food count", nextScreen: FoodCount}),        new NavButtonC3({ string: "Edit Calories", nextScreen: Edit }),        new NavButton5({ string: "Go Back", nextScreen: Next }),            ]});var navBar3 = new Column({ bottom: 0, height: 50, left:0, right:0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButton3({ string: "Next Page", nextScreen: calculation2 }),        new NavButton3({ string: "Return Home", nextScreen: MainScreen2 }),    ]});var navBardone = new Column({ bottom: 0, height: 50, left:0, right:0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButtondone({ string: "Return Home", nextScreen: MainScreen2 }),    ]});var navBar4 = new Column({ top: 23, bottom: 0, height: 10, left: 0, right: 0,    skin: new Skin({ fill: "#313438" }),    contents: [        new NavButton4({ string: "Chocolate Cake", nextScreen: Cake }),        new NavButton4({ string: "Plate of Pad Thai", nextScreen: Thai }),        new NavButton4({ string: "IHOP Chorizo Fiesta Omelette", nextScreen: IHOP }),        new NavButton4({ string: "Harmless Coconut Water", nextScreen: Water }),        new NavButton4({ string: "Boba milk tea with grass jelly", nextScreen: Boba }),        new NavButton4({ string: "Cup of black coffee", nextScreen: Coffee }),        new NavButton4({ string: "Grande Caramel Frappuccino", nextScreen: Frap }),        new NavButtonC2({ string: "Previous Page", nextScreen: MainScreen2 }),    ]});var navBar6 = new Column({ bottom: 0, height: 50, left:0, right:0,    skin: new Skin({ fill: "black" }),    contents: [        new NavButton6({ string: "Previous Page", nextScreen: calculation }),        new NavButton6({ string: "Return Home", nextScreen: MainScreen2 }),    ]});application.add(navBar);